#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API
"""
import requests
import os

API_BASE = "http://localhost:8000"

def test_api():
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Iteira Knowledge Base API")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ API
    print("1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ API...")
    try:
        response = requests.get(f"{API_BASE}/api")
        if response.status_code == 200:
            print("‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print(f"   –û—Ç–≤–µ—Ç: {response.json()}")
        else:
            print("‚ùå API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç")
            return
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return
    
    # –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤
    print("\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤...")
    try:
        response = requests.get(f"{API_BASE}/files")
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {data['count']}")
            for file in data['files']:
                print(f"   - {file['name']} ({file['size']} –±–∞–π—Ç)")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 3: –°—Ç–∞—Ç—É—Å –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π
    print("\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π...")
    try:
        response = requests.get(f"{API_BASE}/knowledge-base/status")
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {data['knowledge_base_exists']}")
            print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤: {data['files_count']}")
            print(f"   –ü—É—Ç—å –∫ ChromaDB: {data['chroma_path']}")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 4: –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π
    print("\n4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π...")
    try:
        response = requests.post(f"{API_BASE}/knowledge-base/regenerate")
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ {data['message']}")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\n" + "=" * 50)
    print("üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print(f"üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API: {API_BASE}/docs")
    print(f"üåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: {API_BASE}")

if __name__ == "__main__":
    test_api()