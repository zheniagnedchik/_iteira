#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–æ–π Iteira
"""
import sys
import subprocess
import os
import signal
import time

def start_bot():
    """–ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞"""
    print("ü§ñ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...")
    subprocess.Popen([sys.executable, "main.py"])
    print("‚úÖ Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω")

def start_api():
    """–ó–∞–ø—É—Å–∫ API —Å–µ—Ä–≤–µ—Ä–∞"""
    print("üöÄ –ó–∞–ø—É—Å–∫ API —Å–µ—Ä–≤–µ—Ä–∞...")
    subprocess.Popen(["uvicorn", "api:app", "--host", "0.0.0.0", "--port", "8000"])
    print("‚úÖ API —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:8000")
    print("üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –≤–∫–ª—é—á–µ–Ω–æ")

def stop_services():
    """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"""
    print("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤...")
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ Python
    try:
        subprocess.run(["pkill", "-f", "main.py"], check=False)
        subprocess.run(["pkill", "-f", "uvicorn"], check=False)
        print("‚úÖ –°–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ: {e}")

def status():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤"""
    print("üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram –±–æ—Ç–∞
    result = subprocess.run(["pgrep", "-f", "main.py"], capture_output=True)
    if result.returncode == 0:
        print("‚úÖ Telegram –±–æ—Ç: —Ä–∞–±–æ—Ç–∞–µ—Ç")
    else:
        print("‚ùå Telegram –±–æ—Ç: –Ω–µ –∑–∞–ø—É—â–µ–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ API
    result = subprocess.run(["pgrep", "-f", "uvicorn"], capture_output=True)
    if result.returncode == 0:
        print("‚úÖ API —Å–µ—Ä–≤–µ—Ä: —Ä–∞–±–æ—Ç–∞–µ—Ç (–≤–∫–ª—é—á–∞–µ—Ç –∞–≤—Ç–æ–æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤)")
    else:
        print("‚ùå API —Å–µ—Ä–≤–µ—Ä: –Ω–µ –∑–∞–ø—É—â–µ–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤–æ–≥–æ watcher (–æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞)
    result = subprocess.run(["pgrep", "-f", "file_watcher.py"], capture_output=True)
    if result.returncode == 0:
        print("‚úÖ –§–∞–π–ª–æ–≤—ã–π watcher: —Ä–∞–±–æ—Ç–∞–µ—Ç (–æ—Ç–¥–µ–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å)")
    else:
        print("‚ÑπÔ∏è –§–∞–π–ª–æ–≤—ã–π watcher: –Ω–µ –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å")

def regenerate_kb():
    """–ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π"""
    print("üîÑ –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π...")
    try:
        from agent.vector_db import VectorDB
        vector_db = VectorDB()
        files_path = os.path.join(os.path.dirname(os.path.abspath(__file__)), "files")
        vector_db.create_vector_store(files_path)
        print("‚úÖ –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {e}")

def start_watcher():
    """–ó–∞–ø—É—Å–∫ —Ñ–∞–π–ª–æ–≤–æ–≥–æ watcher"""
    print("üëÄ –ó–∞–ø—É—Å–∫ —Ñ–∞–π–ª–æ–≤–æ–≥–æ watcher...")
    subprocess.Popen([sys.executable, "file_watcher.py"])
    print("‚úÖ –§–∞–π–ª–æ–≤—ã–π watcher –∑–∞–ø—É—â–µ–Ω")

def show_help():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É"""
    print("""
üîß –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Iteira

–ö–æ–º–∞–Ω–¥—ã:
  start-bot     –ó–∞–ø—É—Å—Ç–∏—Ç—å Telegram –±–æ—Ç–∞
  start-api     –ó–∞–ø—É—Å—Ç–∏—Ç—å API —Å–µ—Ä–≤–µ—Ä (–≤–∫–ª—é—á–∞–µ—Ç –∞–≤—Ç–æ–æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤)
  start-watcher –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ —Ñ–∞–π–ª–æ–≤—ã–π watcher
  start-all     –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
  stop          –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
  restart       –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
  status        –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
  regen-kb      –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –±–∞–∑—É –∑–Ω–∞–Ω–∏–π
  test          –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å API
  help          –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

–ü—Ä–∏–º–µ—Ä—ã:
  python manage.py start-all
  python manage.py status
  python manage.py stop

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:
  –ü—Ä–∏ –∑–∞–ø—É—Å–∫–µ API —Å–µ—Ä–≤–µ—Ä–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –≤–∫–ª—é—á–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.
  –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –±—É–¥–µ—Ç –ø–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –ø—Ä–∏ –ª—é–±—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö –≤ –ø–∞–ø–∫–µ files/
""")

def main():
    if len(sys.argv) < 2:
        show_help()
        return
    
    command = sys.argv[1]
    
    if command == "start-bot":
        start_bot()
    elif command == "start-api":
        start_api()
    elif command == "start-watcher":
        start_watcher()
    elif command == "start-all":
        start_bot()
        time.sleep(1)
        start_api()
        print("\nüéâ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã!")
        print("ü§ñ Telegram –±–æ—Ç: —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("üåê API: http://localhost:8000")
        print("üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8000/docs")
    elif command == "stop":
        stop_services()
    elif command == "restart":
        stop_services()
        time.sleep(2)
        start_bot()
        time.sleep(1)
        start_api()
        print("üîÑ –°–µ—Ä–≤–∏—Å—ã –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã")
    elif command == "status":
        status()
    elif command == "regen-kb":
        regenerate_kb()
    elif command == "test":
        subprocess.run([sys.executable, "test_api.py"])
    elif command == "help":
        show_help()
    else:
        print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {command}")
        show_help()

if __name__ == "__main__":
    main()